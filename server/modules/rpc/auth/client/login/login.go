// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: login.proto

package login

import (
	"context"

	"overall/modules/rpc/auth/pb/login"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccountLoginReq = login.AccountLoginReq
	LoginResp       = login.LoginResp
	LogoutReq       = login.LogoutReq
	LogoutResq      = login.LogoutResq
	SMSLoginReq     = login.SMSLoginReq

	Login interface {
		// 登录
		AccountLogin(ctx context.Context, in *AccountLoginReq, opts ...grpc.CallOption) (*LoginResp, error)
		// 退出登录
		Logout(ctx context.Context, in *LogoutReq, opts ...grpc.CallOption) (*LogoutResq, error)
	}

	defaultLogin struct {
		cli zrpc.Client
	}
)

func NewLogin(cli zrpc.Client) Login {
	return &defaultLogin{
		cli: cli,
	}
}

// 登录
func (m *defaultLogin) AccountLogin(ctx context.Context, in *AccountLoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := login.NewLoginClient(m.cli.Conn())
	return client.AccountLogin(ctx, in, opts...)
}

// 退出登录
func (m *defaultLogin) Logout(ctx context.Context, in *LogoutReq, opts ...grpc.CallOption) (*LogoutResq, error) {
	client := login.NewLoginClient(m.cli.Conn())
	return client.Logout(ctx, in, opts...)
}
